/*!
 * Albe-Timeline v4.0.0, https://github.com/Albejr/jquery-albe-timeline
 * ======================================================================
 * Plugin para renderização de 'linha do tempo' a partir de listas de dados em JSON
 *
 * 2017, Albertino Júnior, http://albertino.eti.br
 */
! function ($) {
	$.fn.makeNavbar = function () {
		var $this = this;

		$this.append('<div style="clear:both;"></div>')
		return $this;
	}

	$.fn.hoverline = function (options) {
		var settings = $.extend({
			'color': '#333',
			'height': '2px',
			'start': '1',
			'speed': '200',
			'border': 'none',
			'borderwidthside': '1px',
			'borderwidthtop': '1px',
			'borderstyle': 'solid'
		}, options);
		var $hoverline = $('<span>');

		$hoverline.attr('class', 'hoverline');
		$hoverline.css({
			'background': settings.color,
			'height': settings.height,
			'border-color': settings.border,
			'border-style': settings.borderstyle,
			'border-width': settings.borderwidthtop + ' ' + settings.borderwidthside,
			'width': '1px',
			'position': 'relative',
			'left': '1px',
			'bottom': '23px',
			'zIndex': 5
		});

		if (settings.border == "none")
			$hoverline.css('border', '0');

		this.each(function () {
			$this = $(this);

			function moveHover() {
				if (!$(this).parent().parent().parent().find('ul li a.clicked').hasClass('clicked')) {
					$link = $(this);
					$(this).parent().parent().parent().find('.hoverline').stop().animate({
						'left': $link.parent().position().left,
						'width': $link.parent().width()
					}, speed);
				}
			}

			function clickedItem() {
				$(this).parent().parent().parent().find('ul li a.currElement').removeClass('currElement');
				$(this).addClass('currElement');
				$(this).addClass('clicked');
			}

			function leaveHover() {
				if (!$(this).parent().parent().parent().find('ul li a.clicked').hasClass('clicked')) {


					$link = $(this).find('ul li a.currElement');
					$(this).find('.hoverline').stop().animate({
						'left': $link.parent().position().left,
						'width': $link.parent().width()
					}, speed);
				}
			}

			$this.css({
				'position': 'sticky',
				'float': 'right',
				'top': 0,
				'zIndex': 5,
				'height': '50px',
				'margin-bottom': 0
			});

			$this.append('<div style="clear:both;"></div>');
			$this.append($hoverline.clone());
			$hoverline = $this.find('.hoverline');
			var speed = parseInt(settings.speed);
			$this.find('ul li a').bind('click', clickedItem);
			$this.find('ul li a').bind('mouseenter', moveHover);
			$this.bind('mouseleave', leaveHover);
			$this.find('ul li a').eq(settings.start - 1).addClass('currElement');
			$this.trigger('mouseleave');
		});
		return this;
	};

	$.fn.albeTimeline = function (json, options) {
		function scrollTracking(y) {
			$.each(y, function (key, value) {
				var et = $(".year" + key).offset().top,
					eh = $(".year" + key).height();
				// et <= 70 && et + eh >= 100 ? (null != yearsCont[key] && 0 != yearsCont[key] || $("#tlm" + key).css("color", "#b691fa"),
				// 	yearsCont[key] = !0) : (null != yearsCont[key] && 1 != yearsCont[key] || $("#tlm" + key).css("color", ""),
				// 	yearsCont[key] = !1)
				if (et <= 105 && et + eh >= 100) {
					if (yearsCont[key] != null || yearsCont[key] == false) {
						if ($('#tlm' + key).parent().parent().parent().find('ul li a.clicked').hasClass('clicked')) {
							if ($('#tlm' + key).hasClass('clicked')) {
								$('#tlm' + key).parent().parent().parent().find('ul li a.clicked').removeClass('clicked');
							}
							return;
						}
						$("#tlm" + key).css("color", "#b691fa");
						$('#tlm' + key).parent().parent().parent().find('ul li a.currElement').removeClass('currElement');
						$('#tlm' + key).addClass('currElement');
						$link = $('#tlm' + key);
						$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
							'left': $link.parent().position().left,
							'width': $link.parent().width()
						}, 200);
					}
					yearsCont[key] = true;
				} else {
					if (yearsCont[key] != null || yearsCont[key] == false) {
						$("#tlm" + key).css("color", "");
						if ((key == Object.keys(yearsCont)[Object.keys(yearsCont).length - 1]) && et > 70) {
							$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
								'left': 0,
								'width': 0
							}, 200);
						}
					}
					yearsCont[key] = false;
				}
			})
		}
		var _this = this;
		this.html("");
		var settings = $.extend({}, $.fn.albeTimeline.defaults, options),
			idioma = $.fn.albeTimeline.languages.hasOwnProperty(settings.language) ? $.fn.albeTimeline.languages[settings.language] : {
				days: ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"],
				months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
				shortMonths: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
				separator: "de",
				msgEmptyContent: "Sem informações a serem exibidas."
			};
		if ("string" == typeof json && (json = $.parseJSON(json)), $.isEmptyObject(json)) console.warn(idioma.msgEmptyContent);
		else {
			json = json.sort(function (a, b) {
				return settings.sortDesc ? Date.parse(b.time) - Date.parse(a.time) : Date.parse(a.time) - Date.parse(b.time)
			});
			var eMenuD = $('<nav>').addClass('navbar'),
				eMenu = $("<ul>").attr("id", "timeline-menu"),
				eTimeline = $("<section>").attr("id", "timeline"),
				streamsCount = {},
				yearsCont = {};
			$.each(json, function (index, element) {
				var ano = new Date(element.time).getFullYear(),
					agrupador = $(eTimeline).find("div.group" + ano),
					divArt = $(eTimeline).find('div.articles' + ano);
				if (0 === agrupador.length) {
					yearsCont[ano] = null;
					streamsCount[ano] = 0;
					agrupador = $("<div>").attr("id", "y" + ano).addClass("group" + ano).text(ano).attr("name", "y" + ano).attr("data-toggle", "tooltip").attr("data-placement", "right");
					divArt = $('<div>').addClass('articles' + ano);
					var yearBlock = $("<div>").addClass("year" + ano).append(agrupador).append(divArt);
					$(eTimeline).append(yearBlock);
					var anchor = $("<a>").attr("href", "#y" + ano).text(ano).addClass("scrollto").attr("name", "y" + ano).attr("id", "tlm" + ano).attr("data-toggle", "tooltip").attr("data-placement", "bottom");
					eMenu.append($("<li>").append(anchor))
				}
				var badge = $("<div>").addClass("badge");
				badge.text(fnDateFormat(element.time, settings.formatDate, idioma));
				var ePanel = $("<div>").addClass("panel").append(badge);
				if (element.header) {
					var ePanelHead = $("<div>").addClass("panel-heading"),
						ePaneltitle = $("<h4>").addClass("panel-title").text(element.header);
					ePanelHead.append(ePaneltitle);
					ePanel.append(ePanelHead)
				}
				var ePanelBody = $("<div>").addClass("panel-body");
				if ($.each(element.body, function (index2, value2) {
						var e = $("<" + value2.tag + ">");
						$(value2.attr).each(function () {
							$.each(this, function (index3, value3) {
								"cssclass" === index3.toLowerCase() ? e.addClass(value3) : e.attr(index3, value3)
							})
						}), value2.content && e.html(value2.content), ePanelBody.append(e)
					}), ePanel.append(ePanelBody), element.footer) {
					var ePanelFooter = $("<div>").addClass("panel-footer").html(element.footer);
					ePanel.append(ePanelFooter)
				}
				streamsCount[ano]++;
				// var irmaos = agrupador.siblings('article[id^="a' + ano + '"]'),
				var slot = $('<article id="a' + ano + "-" + streamsCount[ano] + '">').append(ePanel);
				// irmaos.length > 0 ? slot.insertAfter(irmaos.last()) : slot.insertAfter(agrupador), streamsCount[ano] = irmaos.length + 1
				slot.appendTo(divArt);
			});

			var badge = $("<div>").addClass("badge").html("&nbsp;"),
				ePanel = $("<div>").addClass("panel").append(badge);

			eTimeline.append($("<article>").append(ePanel));
			eTimeline.append($("<div>").addClass("clearfix").css({
				float: "none"
			}));;

			$.each(eTimeline.find("article"), function (index, value) {
				$(this).addClass(index % 2 == 0 ? "" : "inverted");
// 				settings.effect && "none" != settings.effect && $(this).addClass("animated " + settings.effect);
			});

			$.each(eTimeline.find('div[class*="articles"]'), function (index, value) {
				if (settings.effect && settings.effect != 'none') $(this).addClass('animatedArts animatedFadeInUpArts fadeInUpArts').css('animation-delay', '0.3s');
			});

			if (settings.showGroup) {
				$.each(eTimeline.find('div[class*="group"]'), function (index, value) {
					if (settings.effect && settings.effect != 'none') $(this).addClass('animated fadeInLeft').css('animation-duration', '0.7s')
				})
				if (settings.showMenu) {
					eMenuD.append(eMenu);
					if (settings.effect && settings.effect != 'none') eMenuD.addClass('animated fadeInRight').css('animation-delay', '0.5s')
					eMenuD.appendTo(_this)
				}
			} else {
				$.each(eTimeline.find('div[class*="group"]'), function (index, value) {
					$(this).css('display', 'none')
				})
			}

			eTimeline.appendTo(_this);

			$.each(streamsCount, function (key, value) {
				$('[name="y' + key + '"]').attr("data-original-title", "Всего стримов в " + key + "-м году: " + value);
			});

			$('[data-toggle="tooltip"]').tooltip({
				container: "body",
				trigger: "hover"
			});

			$(document).ready(function () {
				$("a.scrollto").on("click", function (e) {
					e.preventDefault(), $("#list0").scrollTo($(this.hash), 500, {offset: {top:6}})
				})
			});

			$("#list0").scroll(function () {
				scrollTracking(streamsCount)
			});

			$(document).ready(function () {
				$('.navbar').makeNavbar();
				$('.navbar').hoverline({
					'color': '#6441a5',
					'height': '5px'
				});
			});

			$("#historyModal").one('shown.bs.modal', function () {
				setTimeout(function () {
					if (settings.effect && settings.effect != 'none') {
						$.each(eTimeline.find('div[class*="group"]'), function (index, value) {
							if (settings.effect && settings.effect != 'none') $(this).removeClass('animated fadeInLeft')
						});
						$.each(eTimeline.find('div[class*="articles"]'), function (index, value) {
							if (settings.effect && settings.effect != 'none') $(this).removeClass('animatedArts animatedFadeInUpArts fadeInUpArts')
						});
						eMenuD.removeClass('animated fadeInRight');
					}
				}, 1000);
			});

			// settings.showGroup ? settings.showMenu && eMenu.appendTo(this) : $.each(eTimeline.find('div[class*="group"]'), function (index, value) {
			// 	$(this).css("display", "none")
			// }), eTimeline.appendTo(this), $.each(streamsCount, function (key, value) {
			// 	$('[name="y' + key + '"]').attr("data-original-title", "Всего стримов в " + key + "-м году: " + value)
			// }), $('[data-toggle="tooltip"]').tooltip({
			// 	container: "body",
			// 	trigger: "hover"
			// }), $(document).ready(function () {
			// 	$("a.scrollto").on("click", function (e) {
			// 		e.preventDefault(), $("#list0").scrollTo($(this.hash), 500)
			// 	})
			// }), $("#list0").scroll(function () {
			// 	scrollTracking(streamsCount)
			// })
		}
	}, $.fn.albeTimeline.languages = {}, $.fn.albeTimeline.defaults = {
		effect: "fadeInUp",
		formatDate: "dd MMM",
		language: "pt-BR",
		showGroup: !0,
		showMenu: !0,
		sortDesc: !0
	};
	var fnDateFormat = function (value, format, language) {
			var parts = value.split(/[ :\-\/]/g),
				newDate = new Date(parts[0], parts[1] - 1, parts[2], parts[3] || 0, parts[4] || 0, parts[5] || 0);
			return language.separator && (format = format.replace(new RegExp(language.separator, "g"), "___")), format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = (format = format.replace("ss", padLeft(newDate.getSeconds(), 2))).replace("s", newDate.getSeconds())).replace("dd", padLeft(newDate.getDate(), 2))).replace("d", newDate.getDate())).replace("mm", padLeft(newDate.getMinutes(), 2))).replace("m", newDate.getMinutes())).replace("MMMM", language.months[newDate.getMonth()])).replace("MMM", language.months[newDate.getMonth()].substring(0, 3))).replace("MM", padLeft(newDate.getMonth() + 1, 2))).replace("DD", language.days[newDate.getDay()])).replace("yyyy", newDate.getFullYear())).replace("YYYY", newDate.getFullYear())).replace("yy", (newDate.getFullYear() + "").substring(2))).replace("YY", (newDate.getFullYear() + "").substring(2))).replace("HH", padLeft(newDate.getHours(), 2))).replace("H", newDate.getHours()), language.separator && (format = format.replace(new RegExp("___", "g"), language.separator)), format
		},
		padLeft = function (n, width, z) {
			return z = z || "0", (n += "").length >= width ? n : new Array(width - n.length + 1).join(z) + n
		}
}(jQuery);
